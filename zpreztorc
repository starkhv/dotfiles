#
# Sets Prezto options.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#
# General
#

# Set case-sensitivity for completion, history lookup, etc.
# zstyle ':prezto:*:*' case-sensitive 'yes'

# Color output (auto set to 'no' on dumb terminals).
zstyle ':prezto:*:*' color 'yes'

# Set the Zsh modules to load (man zshmodules).
# zstyle ':prezto:load' zmodule 'attr' 'stat'

# Set the Zsh functions to load (man zshcontrib).
# zstyle ':prezto:load' zfunction 'zargs' 'zmv'

# Set the Prezto modules to load (browse modules).
# The order matters.
zstyle ':prezto:load' pmodule \
  'environment' \
  'terminal' \
  'editor' \
  'history' \
  'directory' \
  'spectrum' \
  'utility' \
  'completion' \
  'git' \
  'syntax-highlighting' \
  'history-substring-search' \
  'prompt'

#
# Editor
#

# Set the key mapping style to 'emacs' or 'vi'.
zstyle ':prezto:module:editor' key-bindings 'vi'

# Auto convert .... to ../..
# zstyle ':prezto:module:editor' dot-expansion 'yes'

#
# Git
#

# Ignore submodules when they are 'dirty', 'untracked', 'all', or 'none'.
# zstyle ':prezto:module:git:status:ignore' submodules 'all'

#
# GNU Utility
#

# Set the command prefix on non-GNU systems.
# zstyle ':prezto:module:gnu-utility' prefix 'g'

#
# History Substring Search
#

# Set the query found color.
# zstyle ':prezto:module:history-substring-search:color' found ''

# Set the query not found color.
# zstyle ':prezto:module:history-substring-search:color' not-found ''

# Set the search globbing flags.
# zstyle ':prezto:module:history-substring-search' globbing-flags ''

#
# Pacman
#

# Set the Pacman frontend.
# zstyle ':prezto:module:pacman' frontend 'yaourt'

#
# Prompt
#

# Set the prompt theme to load.
# Setting it to 'random' loads a random theme.
# Auto set to 'off' on dumb terminals.
zstyle ':prezto:module:prompt' theme 'paradox'

#
# Ruby
#

# Auto switch the Ruby version on directory change.
# zstyle ':prezto:module:ruby:chruby' auto-switch 'yes'

#
# Screen
#

# Auto start a session when Zsh is launched in a local terminal.
# zstyle ':prezto:module:screen:auto-start' local 'yes'

# Auto start a session when Zsh is launched in a SSH connection.
# zstyle ':prezto:module:screen:auto-start' remote 'yes'

#
# SSH
#

# Set the SSH identities to load into the agent.
# zstyle ':prezto:module:ssh:load' identities 'id_rsa' 'id_rsa2' 'id_github'

#
# Syntax Highlighting
#

# Set syntax highlighters.
# By default, only the main highlighter is enabled.
# zstyle ':prezto:module:syntax-highlighting' highlighters \
#   'main' \
#   'brackets' \
#   'pattern' \
#   'cursor' \
#   'root'
#
# Set syntax highlighting styles.
# zstyle ':prezto:module:syntax-highlighting' styles \
#   'builtin' 'bg=blue' \
#   'command' 'bg=blue' \
#   'function' 'bg=blue'

#
# Terminal
#

# Auto set the tab and window titles.
# zstyle ':prezto:module:terminal' auto-title 'yes'

# Set the window title format.
# zstyle ':prezto:module:terminal:window-title' format '%n@%m: %s'

# Set the tab title format.
# zstyle ':prezto:module:terminal:tab-title' format '%m: %s'

#
# Tmux
#

# Auto start a session when Zsh is launched in a local terminal.
# uncommented by KHV
zstyle ':prezto:module:tmux:auto-start' local 'no'

# Auto start a session when Zsh is launched in a SSH connection.
# zstyle ':prezto:module:tmux:auto-start' remote 'yes'

# Integrate with iTerm2.
# zstyle ':prezto:module:tmux:iterm' integrate 'yes'

# added by KHV
alias py="ptpython"
alias pyt="ptipython"
alias t="tmux"
alias home="xrandr --output DP1 --right-of HDMI2; xrandr --output HDMI2 --rotate right"
alias fd="find . -type d -name"
alias ff="find . -type f -name"
alias f="find -name"
alias py="python"
alias pyt="ptipython"
alias t="tree"
alias ta="tree -a"
alias cps="cp * .*"
alias mvs="mv * .*"
alias to="touch"
#if [ "$TMUX" = "" ]; then tmux; fi
function mcd(){
	mkdir $1 && cd $1
}
function mx()         
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}
#git show in vim
function vimgitshow() { 
git show "$1" | vim - "+set filetype=${1##*.}";
}
function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

    if (( $# > 0 )); then
        valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}\.\)\{3\}\([0-9]\{1,3\}\)\{1\}:\([0-9]\+\)/&/p')
        if [[ $valid != $@ ]]; then
            >&2 echo "Invalid address"
            return 1
        fi

        export http_proxy="http://$1/"
        export https_proxy=$http_proxy
        export ftp_proxy=$http_proxy
        export rsync_proxy=$http_proxy
	# http://askubuntu.com/questions/171975/where-are-the-proxy-settings-saved
	gsettings set org.gnome.system.proxy mode 'manual'
	# run the following to change gnome proxy
	# gsettings set org.gnome.system.proxy.http port 8080
	# gsettings set org.gnome.system.proxy.http host 172.16.1.1
        echo "Proxy environment variable set."
        return 0
    fi

    echo -n "username: "; read username
    if [[ $username != "" ]]; then
        echo -n "password: "
        read -es password
        local pre="$username:$password@"
    fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
    export HTTP_PROXY=$http_proxy
    export HTTPS_PROXY=$http_proxy
    export FTP_PROXY=$http_proxy
    export RSYNC_PROXY=$http_proxy
}

function proxy_off(){
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
    unset rsync_proxy
    gsettings set org.gnome.system.proxy mode 'none'
    echo -e "Proxy environment variable removed."
}
#switch keyboard layout to internal
function intkey(){
setxkbmap -layout us
rm -f ~/.Xmodmap
ln -s ~/dotfiles/intkey.Xmodmap ~/.Xmodmap
xmodmap ~/.Xmodmap
}
#switch keyboard layout to logitech k200
function logikey(){
sudo cp ~/dotfiles/logikey.layout /usr/share/X11/xkb/symbols/pc
sudo rm -rf /var/lib/xkb/*
sudo pkill X
}
#switch keyboard layout to tvs gold
function tvskey(){
sudo cp ~/dotfiles/tvskey.layout /usr/share/X11/xkb/symbols/pc
sudo rm -rf /var/lib/xkb/*
sudo pkill X
}
#start music
function music(){
mpd && ncmpcpp
}
export VISUAL=nvim
export EDITOR="$VISUAL"
alias lstr="ls -tr"
alias lsltr="ls -ltr"
alias lsalh="ls -alh"
alias lsah="ls -ah"
alias lsltra="ls -ltra"
alias md="mkdir"
alias rmr="rm -r"
alias rmf="rm -f"
alias rmrf="rm -rf"
alias c="clear"
alias x="exit"
alias m="man"
alias v="nvim"
alias a="atom"
alias s="sudo"
alias vo="nvim -O"
alias vimrc="nvim ~/.vimrc"
alias zpreztorc="nvim ~/.zpreztorc"
alias zshrc="nvim ~/.zshrc"
alias bashrc="nvim ~/.bashrc"
alias tmux.conf="nvim ~/.tmux.conf"
alias i3config="nvim ~/.i3/config"
alias sv="sudo nvim"
alias reb="shutdown -r now"
alias shu="shutdown -h now"
alias dimon="xrandr --output eDP1 --off; xrandr --output LVDS1 --off"
alias eimon="xrandr --output eDP1 --auto; xrandr --output LVDS1 --auto"
alias dxmon="xrandr --output DP1 --off; xrandr --output VGA1 --off"
alias exmon="xrandr --output DP1 --auto; xrandr --output VGA1 --auto"
alias go="gnome-open"
alias dt="synclient TouchpadOff=1"
alias et="synclient TouchpadOff=0"
alias tf="source activate tf"
alias venv='virtualenv'
# activate the python virtual environment in the current directory
alias sa='source activate'
alias da='deactivate'
# added by Anaconda3 installer
export PATH="/home/f/anaconda3/bin:$PATH"
# source z.sh
. ~/.zdir/z.sh
# required for tensorflow with gpu support
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"
export CUDA_HOME=/usr/local/cuda
